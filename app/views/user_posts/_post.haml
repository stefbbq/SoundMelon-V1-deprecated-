- actor           = current_actor
- band            = post.band_id.blank? ? nil : post.band
- user            = post.user_id.blank? ? nil : post.user
- post_item       = post.postitem
- is_newsfeed     = post.is_newsfeed
- buzz_content    = ""

- unless is_newsfeed
  - if post_item
    - buzz_content  = capture do
      - if post.band_album_post?
        = link_to band_album_buzz_path(post_item.id, :album_name => post_item.name), {:remote => true, :class => 'action-buzz ajaxopen'} do
          %i
          %span buzz
      - elsif post.band_tour_post?
        = link_to band_tour_buzz_path(post_item.band.name, post_item.id), {:remote => true, :class => 'action-buzz ajaxopen'} do
          %i
          %span buzz
      - elsif post.song_post?
        = link_to song_buzz_path(post_item), {:remote => true, :class => 'action-buzz ajaxopen'} do
          %i
          %span buzz
      - elsif post.song_album_post?
        = link_to album_buzz_path(post_item.album_name, post_item.id), {:remote => true, :class => 'action-buzz ajaxopen'} do
          %i
          %span buzz
  
- is_author_artist_profile  = (@band && band ) && @band == band
- is_author_fan_profile     = (@user && user ) && @user == user
- self_post                 = is_author_artist_profile || is_author_fan_profile
- hide_thread_link          ||= false
- divclass                  ||=''

- self_owner      = post.user == current_user
- self_actor      = user == actor || band == actor
- item_div_class  = self_owner ? 'content' : 'content-mentioned'

- writer_header = capture do
  - if band
    = is_author_artist_profile ? band.name : (link_to band.name, show_band_path(:band_name =>band.name), :class =>'ajaxopen backable', :remote =>:true, :title =>band.name)
  - elsif self_owner
    You
  -elsif user
    = is_author_fan_profile ? user.fname : (link_to user.fname, fan_profile_path(post.user), :class =>'ajaxopen backable', :remote =>:true, :title =>user.fname)

- content_header = capture do
  - if post.is_newsfeed?
    #{newsfeed_message(post, post_item).first}
  - elsif post.is_bulletin
    has pinned this to their profile
  - elsif post_item
    #{post_message(post, post_item)}
  - else
    wrote this  
  #{timeago(post.created_at)}

- action_section  = ''
- unless is_newsfeed
  - action_section  = capture do
    - unless buzz_content.blank?
      #{buzz_content}
    - if self_actor
      = link_to user_post_path(post), :method=> :delete, :class=>'action-delete', :remote=>true do
        %i
        %span delete
    - else
      = link_to new_post_reply_path(post), :class=>'action-reply ajaxopen', :remote=>true do
        %i
        %span reply

= div_for post do
  %div{:class=>"#{divclass}"}
    .avatar
      - if user
        - if is_author_fan_profile
          = get_avatar_small(user)
        - else
          = link_to get_avatar_small(user), (self_owner ? fan_home_url : fan_profile_path(user) ), :class =>'ajaxopen backable', :remote =>:true
      - elsif band
        - if is_author_artist_profile
          = get_band_logo_small(band)
        - else
          = link_to get_band_logo_small(band), show_band_path(:band_name =>band.name), :class =>'ajaxopen backable', :remote =>:true
    .content
      .post-header
        .title
          %strong
            #{writer_header}
          %span
            #{content_header}
        .actions
          #{action_section}
      .post-body
        - if is_newsfeed
          #{newsfeed_message(post, post_item).last}
        - else
          = post_msg_with_band_mention(post) unless post.is_newsfeed?
    .clear
    - if post.ancestry && !hide_thread_link
      = link_to 'expand conversation', get_post_threads_path(post), :remote => true, :class => 'ajaxload thread-expand toggle-thread', :id =>"expand_link_#{post.id}"