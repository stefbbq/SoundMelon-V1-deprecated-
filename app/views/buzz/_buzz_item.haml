- useritem                  = post.useritem_id.blank? ? nil : post.useritem
- user                      = post.user_id.blank? ? nil : post.user
- @useritem                 = @artist || @venue
- is_author_useritem_profile= (@useritem && useritem ) && @useritem.id == useritem.id
- is_author_fan_profile     = (@user && user ) && @user.id == user.id
- hide_thread_link          ||= false
- divclass                  ||=''
-if @useritem && @is_admin_of_useritem
  - self_owner = useritem == @useritem ? true : false
- else
  - self_owner = post.user == current_user ? true : false
- item_div_class = self_owner ? 'content' : 'content-mentioned'
= div_for post do
  .content
    .buzz-header
      .title
        %strong
          - if useritem
            = useritem.name
          - elsif self_owner
            You
          - elsif user
            = user.fname
        %span
          wrote this #{time_ago_in_words(post.created_at)} ago
      .actions
        - if self_owner
          = link_to user_post_path(post), :method => :delete, :class=>'action-delete', :remote=>true do
            %i
            %span delete
        - if @useritem && !self_owner
          = link_to new_post_reply_path(post, :useritem_id => @useritem.id), :class=>'action-reply ajaxopen', :remote=>true do
            %i
            %span reply
        -elsif !self_owner
          = link_to new_post_reply_path(post), :class =>'action-reply ajaxopen', :remote=>true do
            %i
            %span reply        
    .body
      = post_msg_with_mention(post)
  .clear
  - if post.ancestry && !hide_thread_link
    = link_to 'expand conversation', get_conversation_thread_path(post), :remote => true, :class => 'ajaxload thread-expand toggle-thread', :id =>"expand_link_#{post.id}"