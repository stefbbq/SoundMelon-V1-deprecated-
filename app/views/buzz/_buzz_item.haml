- useritem                  = post.useritem_id.blank? ? nil : post.useritem
- @useritem                 = @artist || @venue
- is_author_useritem_profile= (@useritem && useritem ) && @useritem == useritem
- is_author_fan_profile     = (@user && useritem ) && @user == useritem
- hide_thread_link          ||= false
- divclass                  ||=''
-if @useritem && @is_admin_of_useritem
  - self_owner = useritem == @useritem ? true : false
- else
  - self_owner = post.useritem == current_user ? true : false
- item_div_class = self_owner ? 'content' : 'content-mentioned'

- writer_header = capture do
  - if useritem
    - link_detail = actor_detail(useritem)
    = is_author_useritem_profile ? useritem.name : (link_to link_detail[:name], link_detail[:link], :class => 'ajaxopen backable', :remote => :true, :title => link_detail[:name])
  -elsif user
    = is_author_fan_profile ? user.get_full_name : (link_to user.get_full_name, fan_profile_path(post.user), :class => 'ajaxopen backable', :remote => :true, :title => user.get_full_name)

.post.entry
  .avatar
    - link_detail = actor_detail(useritem)
    = link_to get_avatar(useritem), link_detail[:link], :class =>'ajaxopen backable', :remote => :true
  .content
    .buzz-header
      .title
        %strong
          - if useritem            
            - link_detail = actor_detail(useritem)
            = is_author_useritem_profile ? useritem.name : (link_to link_detail[:name], link_detail[:link], :class => 'ajaxopen backable', :remote => :true, :title => link_detail[:name])
          - elsif self_owner
            You
          - elsif user
            = user.fname
        %span
          wrote this #{time_ago_in_words(post.created_at)} ago
      .actions
        - if self_owner
          = link_to user_post_path(post), :method => :delete, :class=>'action-delete', :remote=>true do
            %i
            %span delete
        - if @useritem && !self_owner
          = link_to new_post_reply_path(post, :useritem_id => @useritem.id), :class=>'action-reply ajaxopen', :remote=>true do
            %i
            %span reply
        -elsif !self_owner
          = link_to new_post_reply_path(post), :class =>'action-reply ajaxopen', :remote=>true do
            %i
            %span reply        
    .body
      = post_msg_with_mention(post)
  .clear