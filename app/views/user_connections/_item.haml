- status                      = true
- is_search_item              ||= false
- change_connection           = false
- is_user_actor               = @actor == user
- is_self_profile             = @actor == connection_item

- if user.instance_of?(Artist)
  - link                      = show_artist_path(user.name)
  - image                     = get_artist_avatar(user)
  - name                      = user.name
  - location                  = nil
- elsif user.instance_of?(User)
  - link                      = fan_profile_path(user.id)
  - image                     = get_fan_avatar(user)
  - name                      = user.get_full_name
  - location                  = user.get_full_address
- else
  - status                    = false

- change_connection           = !is_user_actor && @actor.is_fan?

- if change_connection
  - connector_item              = is_user_actor ? connection_item : user
  - is_following                = @actor.following?(user)
  - if connector_item.is_fan?
    - source_symbol             = is_search_item ? 4 : is_self_profile ? 1 : 3
    - connector_follow_link     = follow_user_path(connector_item.id, source_symbol)
    - connector_unfollow_link   = unfollow_user_path(connector_item.id, source_symbol)
  - else
    - source_symbol             = is_search_item ? 4 : is_self_profile ? 2 : 3
    - connector_follow_link     = follow_artist_path(connector_item.name, source_symbol)
    - connector_unfollow_link   = unfollow_artist_path(connector_item.name, source_symbol)

  - if status
    - if is_following
      - connection_link_text    = 'unfollow'
      - connection_link         = connector_unfollow_link
    - else
      - connection_link_text    = 'follow'
      - connection_link         = connector_follow_link

- if status
  - item_div_id               = is_user_fan ? "#{user.class.name.downcase}_#{user.id}_following_#{connection_item.class.name.downcase}_#{connection_item.id}" : "#{connection_item.class.name.downcase}_#{connection_item.id}_following_#{user.class.name.downcase}_#{user.id}"
  - item_div_id               = "#{user.class.name.downcase}_#{user.id}"
  .item{:id => item_div_id}
    = link_to image, link, :remote =>:true, :class => 'ajaxopen backable avatar'
    .content
      %h4
        %strong= link_to name, link, :remote =>:true, :class =>'ajaxopen backable'
        - unless location.blank?
          #{location}
    - if change_connection
      .actions
        = link_to connection_link_text, connection_link, :remote =>:true, :class =>'ajaxopen'