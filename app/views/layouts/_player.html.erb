<% 
@song_items ||= current_user.find_radio_feature_playlist_songs
first_album = @song_items.first ? @song_items.first.song_album : nil
%>

<div id="sm_jplayer" class="jp-jplayer"></div>
<div id="jp_primary-wrapper_1" class="jp-audio">
  <div class="jp-type-single">
    <div class="jp-gui jp-interface">
      <div class="jp-controls">
        <a href="javascript:;" class="jp-pre"></a>
        <div class="play-pause">
          <a href="javascript:;" class="jp-play"></a>
          <a href="javascript:;" class="jp-pause"></a>
        </div>
        <a href="javascript:;" class="jp-next"></a>
        <div class="jp-volume-bar">
          <div class="vol_val">1</div>
          <div class="vol_non">1</div>
        </div>
      </div>
    </div>
    <div class="info">
      <%= get_album_cover_image(first_album) if first_album %>
      <span class="song-title"></span>
      <span class="artist-title"></span>
      <div class="jp-progress"><div class="jp-seek-bar"><div class="jp-play-bar"></div></div></div>
      <div class="jp-additional">
        <a href="javascript:;" class="jp-rep" title="show/hide playlist"></a>
        <a href="javascript:;" class="jp-like" title="like" id="alike" onclick="doLike();"></a>
      </div>
    </div>
    <div class="jp-playlist" id="jp-playlist"><div class="pointer"></div><ul></ul></div>
  </div>
</div>

<script type="text/javascript">
  //<![CDATA[
  var currentTrack        = 0;
  var currentTrackItemId  = 0;
  var player       = $("#sm_jplayer");
  var is_playing   = false;
  $(document).ready(function(){
    makePlayList();
    player.jPlayer({
      ready: function(event){playListStart();},
      play: function(event){afterPlayStart();},
      pause: function(event){afterPlayPause();},
      ended:function(event){playListNext();},
      swfPath: "../js",supplied: "m4a,mp3",wmode: "window"
    });
  });
  $(".jp-pre").click(function() { playListPrev(); }); // Listen for Previous Track button click
  $(".jp-next").click(function() {playListNext(); }); // Listen for Next Track button click

  function playListStart(){if(playList.length>0){playListChange(0, 0);}}
  function updateTrackInfo(b,t,i,l){
    var url       = '<%= show_band_url('abc').gsub("/abc", "") %>/' + b;
    var band_html = '<a href="'  + url + '" class="ajaxopen backable" data-remote="true">' + b +'</a>';
    $('.info .artist-title').html(band_html);
    $('.info .song-title').html(t);
    $('.info img').attr('src', i);
    if(l){$('a#alike').addClass('jp-like-active');}
    else{$('a#alike').removeClass('jp-like-active');}
  }

  function afterPlayStart(){
    var index = currentTrack;
    if(!player.data('jPlayer').status.paused){
      $('.jp-playlist ul li').removeClass('current');
      $("li#litem_" + index).addClass('current');
    }
  }
  function afterPlayPause(){
    $('.jp-playlist ul li').removeClass('current');
  }

  // Switch track
  function playListChange(index,play) {
    currentTrack = index;
    var item     = playList[currentTrack];
    currentTrackItemId = item.i;
    var next     = (currentTrack + 1 < playList.length) ? currentTrack + 1 : 0;
    updateTrackInfo(item.band, item.title, item.image, item.like)
    if(play==1){
      player.jPlayer("setMedia", { m4a:item.mp3, ogg:item.ogg}).jPlayer('play');
    }
    else
      player.jPlayer("setMedia", { m4a:item.mp3, ogg:item.ogg});
  }

  // Play next track. If already on last track, start back at the begining
  function playListNext() { playListChange((currentTrack + 1 < playList.length) ? currentTrack + 1 : 0, 1);}

  // Play previous track. If already on first track, start back at the end
  function playListPrev() { playListChange((currentTrack - 1 >= 0) ? currentTrack - 1 : playList.length-1, 1);}

  function playMusicFromFeaturedList(i, smp3, sogg){
    player.jPlayer("setMedia", { m4a:smp3, ogg:sogg }).jPlayer('play');
    currentTrackItemId = i;
  }

  // Play song from the song list in albums
  function playSongFromAlbum(song_detail){
    player.jPlayer("setMedia", { m4a:song_detail.mp3, ogg:song_detail.ogg }).jPlayer('play');
    currentTrackItemId = song_detail.i;
    updateTrackInfo(song_detail.band, song_detail.title, song_detail.image, song_detail.like)
  }

  function makePlayList(){
    if(playList.length >0){
      var liHtml='';
      for(var i=0;i<playList.length;i++){liHtml+='<li id="litem_' + i + '"><a href="javascript:void(0);" id="item_' + i + '" onclick="playListChange(' + i + ');">' + playList[i]['title'] + '</a><a class="play_list_close" href="javascript:void(0);" onclick="removeListItem(' + i + ');">Close</a><a class="play_list_next" href="javascript:void(0);" onclick="playListChange(' + i + ',1);">play</a></li>';}
      $('.jp-playlist ul').html(liHtml);
    }
    else{player.jPlayer('stop');$('.jp-playlist ul').html('<li>Playlist is empty</li>');}
  }

  function removeListItem(index){if(currentTrack == index){player.jPlayer('stop');}playList.splice(index,1);makePlayList();}

  function doLike(){
    var item      = playList[currentTrack];
    var item_id   = currentTrackItemId;
    var url       =  '<%= request.base_url %>/' + item.title + "/" + item_id + '/like';
    if(!$('a#alike').hasClass('jp-like-active')){url += "/1";}
    $.ajax({type: 'get',url: url, success:function(data){
        var data  = eval('(' + data + ')');
        item.like = data.like;
        if(data.like){$('a#alike').addClass('jp-like-active')}else{$('a#alike').removeClass('jp-like-active');}
      }
    }
  );
  }

  $(".jp-rep").click(function() {
    $('.jp-playlist').focus().toggle();
    if($('.jp-rep').hasClass('jp-rep-active')){
      $('.jp-rep').removeClass('jp-rep-active');
    } else {
      $('.jp-rep').addClass('jp-rep-active');
    }
  });
  $("body").click(function(e){ //broken code
    /*if(!($(target).is('.jp-playlist *') || target.className=='jp-rep' || target.className=='jp-playlist' || target.className=='play_list_close')){
    $(".jp-playlist").hide();
    $('.jp.rep').removeClass('jp-rep-active');
  }*/
  });

  var playList = [<%= list_of_play_items(@song_items) %>];
  //]]>
</script>