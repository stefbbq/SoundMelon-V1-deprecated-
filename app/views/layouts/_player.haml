- @song_items     ||= current_user.find_radio_feature_playlist_songs
- has_some_songs  = !@song_items.blank?
- first_album     = @song_items.first ? @song_items.first.artist_music : nil
- has_some_user   = !@actor.blank?
#sm_jplayer.jp-jplayer
#jp_primary-wrapper.jp-audio
  .jp-type-single
    .jp-gui.jp-interface
      .jp-controls
        %a#jp-pre.jp-pre{:href => "javascript:;"}
        .play-pause
          - if has_some_songs
            / logged-in user
            %a.jp-play{:href => "javascript:;"}
            %a.jp-pause{:href => "javascript:;"}
          - else
            %a.jp-play-dis{:href => "javascript:;"}
        %a#jp-next.jp-next{:href => "javascript:;"}
        .jp-volume-bar1{:style => "position: absolute !important;"}
          .jp-volume-bar-value
            .jp-volume-bar-thumb
        .jp-volume-marker
    .info
      .note
        - if @song_items.empty?
          - if @artist.blank?
            no songs
          - else
            %span= @artist.get_name
            has no featured songs
        - else
          %a.jpp-play{:href => "javascript:;", :onclick =>"playListChange(0,1);"} click play to listen to some tunes            
      .main{:style =>'display:none;'}
        = get_album_cover_image(first_album) if first_album
        %span.song-title
        %span.artist-title
        .jp-progress
          .jp-seek-bar
            .jp-play-bar
        .jp-additional
          %a#buzz.jp-buzz.ajaxopen{"data-remote" => "true", :href => "javascript:;", :onclick => "doBuzz();", :title => "buzz"}
          %a#alike.jp-like{:href => "javascript:;", :onclick => "doLike();", :title => "like"}
          %a.jp-rep{:href => "javascript:;", :title => "show/hide playlist"}      
#jp-playlist.jp-playlist
  .pointer
  %ul
:javascript
  //
  var currentUser         = #{current_user ? 1 : 0};
  var currentTrack        = 0;
  var currentTrackItemId  = 0;
  var player              = $("#sm_jplayer");
  var firstLoad           = 1;
  $(document).ready(function(){
    player.jPlayer({
      ready: function(event){
        makePlayList(0);
        $('.jp-volume-bar-thumb').css('left', event.jPlayer.options.volume * 70 - 8 + 'px');
      },
      play: function(event){afterPlayStart();},
      pause: function(event){afterPlayPause();},
      ended: function(event){
        playListNext();
      },
      swfPath: "#{asset_path("Jplayer.swf")}",supplied: "m4a,oga",wmode: "window"
    });
    
    $('.jp-volume-bar-thumb').draggable({
      axis: "x",
      containment: '.jp-volume-bar1',
      stop: function(event, ui) {
        var volume = ((parseInt(ui.position.left)) / 60) ;
        player.jPlayer("volume", volume);
      },
      drag:function(event, ui){
        $('.jp-volume-bar-thumb').css('left', (ui.position.left * 1.2) + '%');
      }
    });
  });
  
  $("#jp-pre").click(function() {
    if(currentUser==1){
      playListPrev();
    }
  }
  ); // Listen for Previous Track button click
    $("#jp-next").click(function(event) {
      if(currentUser==1){
        playListNext();event.stopPropagation();
      }
    }
  ); // Listen for Next Track button click

    function playListStart(){
      if(playList.length>0 && currentUser==1)
        playListChange(0, 0);
    }

    function updateTrackInfo(b,u,t,i,l){
      if(!firstLoad)
      {      
        var url         = '#{show_artist_url('abc').gsub("/abc", "")}/' + u;
        var artist_html = currentUser ? '<a href="'  + url + '" class="ajaxopen backable" data-remote="true">' + b +'</a>' : b;
        $('.info .note').hide();
        $('.info .main').show();
        $('.info .artist-title').html("by " + artist_html);
        $('.info .song-title').html(t);
        $('.info img').attr('src', i);
        if(l){$('a#alike').addClass('jp-like-active');}
        else{$('a#alike').removeClass('jp-like-active');}
        //enable like/dislike
        $('a#alike').on('click', doLike);
      }
    }
  
    function trackInfoForEmptyPlaylist(){
      $('.info .artist-title').html('');
      $('.info .song-title').html('');
      $('.info img').attr('src', '/assets/no-image.png');
      //disable like/dislike
      $('a#alike').off('click');
      player.jPlayer( "clearMedia" );
    }

    function afterPlayStart(){
      var index = currentTrack;
      if(!player.data('jPlayer').status.paused){
        $('.jp-playlist ul li').removeClass('current');
        $("li#litem_" + index).addClass('current');
      }
    }
    function afterPlayPause(){
      $('.jp-playlist ul li').removeClass('current');
    }

    function enableDisablePrev(state){
      $('#jp-pre').attr('class',state ? 'jp-pre' : 'jp-pre-dis');
    }

    function enableDisableNext(state){
      $('#jp-next').attr('class', state ? 'jp-next' : 'jp-next-dis');
    }

    // Switch track
    function playListChange(index, play) {      
        plLength            = playList.length;
        playing_featured    = false;
        if(index >= 0 && index < plLength){
          var item            = playList[index];
          currentTrackItemId  = item.i;
          updateTrackInfo(item.artist,item.artist_username, item.title, item.image, item.like)
          setSongToPlay(play, item.mp3, item.ogg);
          currentTrack        = index;
        }            
      updateButtons();
      firstLoad = 0;
    }
  
    function updateButtons(){
      var enableState1 = currentUser == 1 ? currentTrack != 0 : false;
      var enableState2 = currentUser == 1 ? (currentTrack != playList.length - 1) : false;    
      enableDisablePrev(enableState1);
      enableDisableNext(enableState2);
    }
  
    // Set song for the player
    function setSongToPlay(start_play, song, song_another){
      player.jPlayer("setMedia", { m4a:song, oga:song_another});
      if(start_play == 1){ player.jPlayer('play'); }
    }

    // Play next track. If already on last track, start back at the begining
    function playListNext() {
      playListChange(currentTrack + 1, 1);
    }

    // Play previous track. If already on first track, start back at the end
    function playListPrev() {
      playListChange(currentTrack - 1, 1);
    }

    // Play song from the song list in albums
    function playSongFromAlbum(song_detail){
      makePlaylistEmpty();
      addSingleSongToPlaylist(song_detail);
      setSongToPlay(1, song_detail.mp3, song_detail.ogg);
      currentTrackItemId = song_detail.i;
      updateTrackInfo(song_detail.artist,song_detail.artist_username, song_detail.title, song_detail.image, song_detail.like);
    }
    // makes fresh playlist
    function makePlayList(startPlay){
      if(playList.length >0){
        var liHtml='';
        for(var i=0;i<playList.length;i++){liHtml+='<li id="litem_' + i + '"><a href="javascript:void(0);" id="item_' + i + '" onclick="playListChange(' + i + ',1);">' + playList[i]['title'] + '</a><a class="play_list_close" href="javascript:void(0);" onclick="removeListItem(' + i + ');">Close</a><a class="play_list_next" href="javascript:void(0);" onclick="playListChange(' + i + ',1);">play</a></li>';}
        $('.jp-playlist ul').html(liHtml);      
        playListChange(currentTrack, startPlay);
      }
      else{
        updateButtons();
        player.jPlayer('stop');$('.jp-playlist ul').html('<li>Playlist is empty</li>');
        trackInfoForEmptyPlaylist();
      }
    }
  
    // adds items to existing playlist
    function addItemsToPlayList(itemsList){
      if(itemsList.length >0){
        // add data
        var currentLength = playList.length;
        for(var i=0;i<itemsList.length;i++){
          playList.push(itemsList[i]);
        }
        // update UI
        var liHtml='';
        var i     = playList.length;
        for(var i=currentLength; i<playList.length;i++){
          liHtml  += '<li id="litem_' + i + '">';
          liHtml  += '<a href="javascript:void(0);" id="item_' + i + '" onclick="playListChange(' + i + ',1);">' + playList[i]['title'] + '</a>';
          liHtml  += '<a class="play_list_close" href="javascript:void(0);" onclick="removeListItem(' + i + ');">Close</a>' ;
          liHtml  += '<a class="play_list_next" href="javascript:void(0);" onclick="playListChange(' + i + ',1);">play</a></li>';
        }
        if($('.jp-playlist ul li').length>0){
          $('.jp-playlist ul').append(liHtml);
        }else
          $('.jp-playlist ul').html(liHtml);
        updateButtons();
      }
    }

    function makePlaylistEmpty(){
      playList = [];
      $('.jp-playlist ul').html('');
    }
  
    function addSingleSongToPlaylist(song_detail){
      currentTrack  = 0;
      playList      = [song_detail];
      makePlayList(1);
    }

    function removeListItem(index){
      if(currentUser==1){
        var shouldPlay  = player.data('jPlayer').status.paused ? 0 : 1
        if(currentTrack == index){
          if(currentTrack==playList.length-1)
            currentTrack = currentTrack - 1;
          else
            currentTrack = currentTrack + 1;
          player.jPlayer('stop');
          shouldPlay    = 0;
        }
        playList.splice(index,1);
        makePlayList(shouldPlay);
      }
    }

    function doLike(){
      //only for logged-in user
      if(currentUser==1){
        var item      = playList[currentTrack];
        var item_id   = currentTrackItemId;
        var url       =  '#{request.base_url}/' + item.title + "/" + item_id + '/like';
        if(!$('a#alike').hasClass('jp-like-active')){url += "/1";}
        $.ajax({type: 'get',url: url, success:function(data){
            var data  = eval('(' + data + ')');
            item.like = data.like;
            if(data.like){$('a#alike').addClass('jp-like-active')}else{$('a#alike').removeClass('jp-like-active');}
          }
        }
      );
      }
      else{
        $('a#logout').trigger('click');
        return false;
      }
    }

    function doBuzz(){
      //only for logged-in user
      if(currentUser==1){
        var item_id   = currentTrackItemId;
        var url       = '#{request.base_url}/buzz/' + item_id;      
        $.getScript(url);
      }
      else{
        $('a#logout').trigger('click');
        return false;
      }
    }
  
    configPlaylist();
  
    function configPlaylist(){
      $(".jp-rep").click(invokePlaylist);
    }
  
    function invokePlaylist() {
      if(!($('.jp-rep').hasClass('jp-rep-active'))){
        $('.jp-playlist').show();
        $('.jp-rep').addClass('jp-rep-active');
        $('.jp-rep').off('click');
      }
    }
  
    var mouse_is_inside = false;
    $('.jp-playlist').hover(function(){
      mouse_is_inside=true;
    }, function(){
      mouse_is_inside=false;
    });

    $("body").mouseup(function(){
      if(!mouse_is_inside){
        $('.jp-rep').removeClass('jp-rep-active');
        $('.jp-playlist').hide();
        window.setTimeout(configPlaylist, 1000, true);
      }
    });
  
    var playList = [#{list_of_play_items(@song_items)}];

:css
  input [type='range'] {
    -webkit-appearance: none !important;
    background:red;
    height:7px;}
  input [type='range']:-webkit-slider-thumb {
    -webkit-appearance: none !important;
    background:blue;
    height:10px;
    width:10px;
  }